scalar Void

type Query {
  getAwsUploadContentAuth: AwsUploadContentAuth!
}

type Mutation {
  updateModule(values: UpdateModuleInput!): Void
  updateChallenge(values: UpdateChallengeInput!): Void
}

type AwsCredentials {
  accessKeyId: String!
  secretAccessKey: String!
  sessionToken: String!
}

type AwsUploadContentAuth {
  bucketName: String!
  credentials: AwsCredentials!
}

input UpdateModuleInput {
  id: Int!
  title: String!
  description: String!
  mainTechnology: String!
  difficulty: String!
  tags: [String!]!
}

input UpdateChallengeInput {
  challengeId: Int!
  moduleId: Int!
  title: String!
  description: String!
  difficulty: String!
  practiceTime: Int!
  detailsS3Key: String!
  htmlS3Key: String!
  files: [ChallengeFileInput!]!
  libraries: [LibraryInput!]!
}

input ChallengeFileInput {
  name: String!
  directory: String!
  s3Key: String!
  isLocked: Boolean
}
input LibraryInput {
  name: String!
  types: String!
  source: String!
}
