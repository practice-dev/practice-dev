name: deploy

on:
  push:
    branches: [master]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Use Node.js 12
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Install ts-node
        run: npm i -g ts-node

      - name: install yarn
        run: yarn install --frozen-lockfile

      - name: deploy challenges
        run: |
          cd challenges
          ts-node -T deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          API_TOKEN: ${{ secrets.API_TOKEN }}
          API_URL: ${{ secrets.API_URL }}
          S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}

      - name: deploy projects
        run: |
          cd projects
          ts-node -T deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          API_TOKEN: ${{ secrets.API_TOKEN }}
          API_URL: ${{ secrets.API_URL }}
          S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
